package com.fmp.view;

import android.annotation.SuppressLint;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Rect;
import android.graphics.drawable.NinePatchDrawable;
import android.util.Base64;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;

@SuppressLint("AppCompatCustomView")
public class BlockmanButton extends Button implements View.OnTouchListener {
    private Context mContext;
    //按钮样式
    private LinearLayout.LayoutParams PARAMS_BUTTON = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
    private String bg_button_nor = "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";
    private String bg_button_pre = "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";

    public BlockmanButton(Context context) {
        super(context);
        mContext = context;
        //设置样式
        PARAMS_BUTTON.setMargins(40, 20, 40, 20);
        setBackground(getBase64NinePatchDrawable(bg_button_nor));
        setOnTouchListener(this);
        setLayoutParams(PARAMS_BUTTON);
    }

    private NinePatchDrawable getBase64NinePatchDrawable(String base64Arr) {
        byte[] bytes = Base64.decode(base64Arr.getBytes(), Base64.DEFAULT);
        Bitmap bitmap = BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
        byte[] chunk = bitmap.getNinePatchChunk();
        return new NinePatchDrawable(bitmap, chunk, new Rect(), null);
    }

    @Override
    public boolean onTouch(View view, MotionEvent event) {
        switch (event.getAction()) {
            case MotionEvent.ACTION_UP:
                //松开事件发生后执行代码的区域
                view.setBackground(getBase64NinePatchDrawable(bg_button_nor));
                break;
            case MotionEvent.ACTION_DOWN:
                //按住事件发生后执行代码的区域
                view.setBackground(getBase64NinePatchDrawable(bg_button_pre));
                break;
            default:
                break;
        }
        return false;
    }

}
